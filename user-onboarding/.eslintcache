[{"C:\\Users\\Meer\\Desktop\\lambda\\unit2\\User-Onboarding\\user-onboarding\\src\\index.js":"1","C:\\Users\\Meer\\Desktop\\lambda\\unit2\\User-Onboarding\\user-onboarding\\src\\App.js":"2","C:\\Users\\Meer\\Desktop\\lambda\\unit2\\User-Onboarding\\user-onboarding\\src\\reportWebVitals.js":"3","C:\\Users\\Meer\\Desktop\\lambda\\unit2\\User-Onboarding\\user-onboarding\\src\\components\\Form.js":"4","C:\\Users\\Meer\\Desktop\\lambda\\unit2\\User-Onboarding\\user-onboarding\\src\\components\\User.js":"5"},{"size":500,"mtime":1611782286238,"results":"6","hashOfConfig":"7"},{"size":229,"mtime":1611794611508,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":4151,"mtime":1611794610551,"results":"10","hashOfConfig":"7"},{"size":316,"mtime":1611794610025,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"lsiiqe",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Meer\\Desktop\\lambda\\unit2\\User-Onboarding\\user-onboarding\\src\\index.js",[],["25","26"],"C:\\Users\\Meer\\Desktop\\lambda\\unit2\\User-Onboarding\\user-onboarding\\src\\App.js",["27"],"import './App.css';\nimport React from 'react';\nimport Form from './components/Form';\n\n\nexport default function App( {  } ) {\n  return (\n    <div className=\"App\">\n      <h1>New User Onboarding</h1>\n      <Form />\n    </div>\n  );\n}","C:\\Users\\Meer\\Desktop\\lambda\\unit2\\User-Onboarding\\user-onboarding\\src\\reportWebVitals.js",[],"C:\\Users\\Meer\\Desktop\\lambda\\unit2\\User-Onboarding\\user-onboarding\\src\\components\\Form.js",["28","29"],"//imports\r\nimport React, { useState, useEffect } from \"react\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport User from \"./User\";\r\n\r\n//formSchema\r\nconst formSchema = yup.object().shape({\r\n    name: yup.string().required(\"Name is required\"),\r\n    email: yup\r\n        .string()\r\n        .email(\"Must be a valid email address\")\r\n        .required(\"Must include an email\"),\r\n    password: yup.string().required(\"Please set a password\"),\r\n    tos: yup.boolean().oneOf([true], \"Must agree to proceed\")\r\n})\r\n\r\n//component\r\nexport default function Form() {\r\n    const initialData = {\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        tos: false\r\n    }\r\n\r\n    const [users, setUsers] = useState([initialData]);\r\n\r\n    //formState\r\n    const [formState, setFormState] = useState(initialData);\r\n\r\n    const [buttonDisabled, setButtonDisabled] = useState(true);\r\n    useEffect(() => {\r\n        formSchema.isValid(formState).then(valid => {\r\n            setButtonDisabled(!valid);\r\n        });\r\n    }, [formState]);\r\n\r\n    //errorState\r\n    const [errorState, setErrorState] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        tos: \"\"\r\n    });\r\n\r\n    //formSubmit\r\n    const formSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"Form submitted!\");\r\n        axios\r\n            .post(\"https://reqres.in/api/users\", formState)\r\n            .then(res => {\r\n                console.log([res.data]);\r\n                setUsers([res.data, ...users]);\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    //validation\r\n    const validate = e => {\r\n        let value = e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\r\n        yup\r\n            .reach(formSchema, e.target.name)\r\n            .validate(value)\r\n            .then(valid => {\r\n                setErrorState({ ...errorState, [e.target.name]: \"\" })\r\n            })\r\n            .catch(err => {\r\n                setErrorState({\r\n                    ...errorState,\r\n                    [e.target.name]: err.errors[0]\r\n                })\r\n            })\r\n    }\r\n\r\n    //inputChange\r\n    const inputChange = (e) => {\r\n        e.persist();\r\n        validate(e);\r\n\r\n        let value = e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\r\n        setFormState({ ...formState, [e.target.name]: value });\r\n    }\r\n\r\n    //JSX\r\n    return (\r\n        <div classname=\"container\">\r\n            <form onSubmit={formSubmit}>\r\n                <label htmlFor=\"email\">\r\n                    Email\r\n                <input type=\"text\" name=\"email\" id=\"email\" value={formState.email} onChange={inputChange} />\r\n                    {errorState.email ? <span className=\"error\">{errorState.email}</span> : null}\r\n                </label>\r\n                <label htmlFor=\"name\">\r\n                    Name\r\n                <input type=\"text\" name=\"name\" id=\"name\" value={formState.name} onChange={inputChange} />\r\n                    {errorState.name ? <span className=\"error\">{errorState.name}</span> : null}\r\n                </label>\r\n                <label htmlFor=\"password\">\r\n                    Password\r\n                <input type=\"password\" name=\"password\" id=\"password\" value={formState.password} onChange={inputChange} />\r\n                    {errorState.password ? <span className=\"error\">{errorState.password}</span> : null}\r\n                </label>\r\n                <span>I accept the Terms and Conditions</span>\r\n                <label htmlFor=\"tos\">\r\n                    <input type=\"checkbox\" name=\"tos\" id=\"tos\" checked={formState.tos} onChange={inputChange} />\r\n                </label>\r\n                {errorState.tos ? <span className=\"error\">{errorState.tos}</span> : null}\r\n                <button disabled={buttonDisabled}>Submit</button>\r\n            </form>\r\n            {\r\n                users.map((user, id) => {\r\n                    if (user.name != \"\") {\r\n                        return (\r\n                            <User key={id} currentUser={user} />\r\n                        )\r\n                    }\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\Meer\\Desktop\\lambda\\unit2\\User-Onboarding\\user-onboarding\\src\\components\\User.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":6,"column":30,"nodeType":"36","messageId":"37","endLine":6,"endColumn":34},{"ruleId":"38","severity":1,"message":"39","line":113,"column":38,"nodeType":"40","messageId":"41","endLine":113,"endColumn":40},{"ruleId":"42","severity":1,"message":"43","line":114,"column":35,"nodeType":"44","messageId":"37","endLine":114,"endColumn":37},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","no-global-assign","no-unsafe-negation"]